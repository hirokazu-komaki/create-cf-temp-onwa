AWSTemplateFormatVersion: '2010-09-09'
Description: 'Well-Architected準拠AWS Config設定テンプレート - コンプライアンスルール、設定変更監視、アラート機能'

Metadata:
  WellArchitectedCompliance:
    Security:
      - SEC04-BP01  # セキュリティイベントをキャプチャし分析する
      - SEC04-BP02  # セキュリティ調査機能を開発し実行する
      - SEC01-BP03  # アクセス権限を定期的に確認し削除する
    OperationalExcellence:
      - OPS04-BP01  # 設定管理システムを実装する
      - OPS04-BP02  # 設定ドリフトを管理する
      - OPS06-BP01  # 運用メトリクスを使用してワークロードの健全性を判断する
    Reliability:
      - REL09-BP01  # 障害を特定し分析する
      - REL09-BP02  # 障害分析プロセスを実装する
  
  ConfigurationPatterns:
    Basic:
      Description: "基本的なConfig設定 - 主要リソースの監視"
      UseCases: ["開発環境", "基本的なコンプライアンス"]
    Advanced:
      Description: "高度なConfig設定 - 包括的な監視とルール"
      UseCases: ["本番環境", "詳細なコンプライアンス"]
    Enterprise:
      Description: "エンタープライズConfig設定 - 全リソース監視と自動修復"
      UseCases: ["大規模組織", "厳格なガバナンス"]

Parameters:
  ConfigPattern:
    Type: String
    Default: Basic
    AllowedValues: [Basic, Advanced, Enterprise]
    Description: Config設定パターンの選択
  
  ProjectName:
    Type: String
    Default: MyProject
    Description: プロジェクト名
    
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: 環境名
    
  EnableAllSupportedResourceTypes:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: サポートされているすべてのリソースタイプを記録するか
    
  EnableGlobalResourceTypes:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: グローバルリソースタイプを記録するか
    
  DeliveryChannelName:
    Type: String
    Default: default
    Description: 配信チャネル名
    
  ConfigSnapshotDeliveryProperties:
    Type: String
    Default: TwentyFour_Hours
    AllowedValues: [One_Hour, Three_Hours, Six_Hours, Twelve_Hours, TwentyFour_Hours]
    Description: 設定スナップショットの配信頻度
    
  EnableConfigRules:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Configルールを有効にするか
    
  EnableRemediationActions:
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    Description: 自動修復アクションを有効にするか
    
  NotificationEmail:
    Type: String
    Default: ''
    Description: 通知用メールアドレス（オプション）

Conditions:
  IsAllResourceTypesEnabled: !Equals [!Ref EnableAllSupportedResourceTypes, 'true']
  IsGlobalResourceTypesEnabled: !Equals [!Ref EnableGlobalResourceTypes, 'true']
  IsConfigRulesEnabled: !Equals [!Ref EnableConfigRules, 'true']
  IsRemediationEnabled: !Equals [!Ref EnableRemediationActions, 'true']
  IsBasicPattern: !Equals [!Ref ConfigPattern, 'Basic']
  IsAdvancedPattern: !Equals [!Ref ConfigPattern, 'Advanced']
  IsEnterprisePattern: !Equals [!Ref ConfigPattern, 'Enterprise']
  HasNotificationEmail: !Not [!Equals [!Ref NotificationEmail, '']]

Resources:
  # Config用S3バケット
  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-${Environment}-config-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: ConfigLogRetention
            Status: Enabled
            ExpirationInDays: 2555  # 7 years
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
              - TransitionInDays: 365
                StorageClass: DEEP_ARCHIVE
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: s3:ObjectCreated:*
            CloudWatchConfiguration:
              LogGroupName: !Ref ConfigLogGroup
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-config-bucket'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: ConfigStorage
        - Key: WellArchitected
          Value: SEC04-BP01

  # Config用S3バケットポリシー
  ConfigBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Statement:
          - Sid: AWSConfigBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt ConfigBucket.Arn
            Condition:
              StringEquals:
                'AWS:SourceAccount': !Ref AWS::AccountId
          - Sid: AWSConfigBucketExistenceCheck
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:ListBucket
            Resource: !GetAtt ConfigBucket.Arn
            Condition:
              StringEquals:
                'AWS:SourceAccount': !Ref AWS::AccountId
          - Sid: AWSConfigBucketDelivery
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub '${ConfigBucket.Arn}/*'
            Condition:
              StringEquals:
                's3:x-amz-acl': bucket-owner-full-control
                'AWS:SourceAccount': !Ref AWS::AccountId
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !GetAtt ConfigBucket.Arn
              - !Sub '${ConfigBucket.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  # Config用IAMロール
  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-config-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/ConfigRole
      Policies:
        - PolicyName: ConfigBucketAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:ListBucket
                Resource: !GetAtt ConfigBucket.Arn
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub '${ConfigBucket.Arn}/*'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-config-role'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Config設定レコーダー
  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-config-recorder'
      RoleARN: !GetAtt ConfigRole.Arn
      RecordingGroup:
        AllSupportedResourceTypes: !Ref EnableAllSupportedResourceTypes
        IncludeGlobalResourceTypes: !Ref EnableGlobalResourceTypes
        ResourceTypes: !If
          - IsAllResourceTypesEnabled
          - !Ref AWS::NoValue
          - - AWS::EC2::Instance
            - AWS::EC2::SecurityGroup
            - AWS::EC2::Volume
            - AWS::IAM::Role
            - AWS::IAM::Policy
            - AWS::S3::Bucket
            - AWS::RDS::DBInstance
            - AWS::Lambda::Function

  # Config配信チャネル
  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      Name: !Ref DeliveryChannelName
      S3BucketName: !Ref ConfigBucket
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: !Ref ConfigSnapshotDeliveryProperties

  # CloudWatch Logs
  ConfigLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/config/${ProjectName}-${Environment}'
      RetentionInDays: 365
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-config-logs'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName  # SN
S Topic for notifications
  ConfigNotificationTopic:
    Type: AWS::SNS::Topic
    Condition: HasNotificationEmail
    Properties:
      TopicName: !Sub '${ProjectName}-${Environment}-config-notifications'
      DisplayName: 'Config Compliance Notifications'
      KmsMasterKeyId: alias/aws/sns
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-config-notifications'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  ConfigNotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: HasNotificationEmail
    Properties:
      TopicArn: !Ref ConfigNotificationTopic
      Protocol: email
      Endpoint: !Ref NotificationEmail

  # Config Rules - Basic Pattern
  RootAccessKeyCheckRule:
    Type: AWS::Config::ConfigRule
    Condition: IsConfigRulesEnabled
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: root-access-key-check
      Description: 'ルートユーザーにアクセスキーが関連付けられていないことを確認'
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCESS_KEY_CHECK
      Tags:
        - Key: Name
          Value: root-access-key-check
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC03-BP02

  MfaEnabledForIamConsoleAccessRule:
    Type: AWS::Config::ConfigRule
    Condition: IsConfigRulesEnabled
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: mfa-enabled-for-iam-console-access
      Description: 'IAMユーザーのコンソールアクセスでMFAが有効になっていることを確認'
      Source:
        Owner: AWS
        SourceIdentifier: MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS
      Tags:
        - Key: Name
          Value: mfa-enabled-for-iam-console-access
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC02-BP02

  S3BucketPublicAccessProhibitedRule:
    Type: AWS::Config::ConfigRule
    Condition: IsConfigRulesEnabled
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: s3-bucket-public-access-prohibited
      Description: 'S3バケットのパブリックアクセスが禁止されていることを確認'
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_ACCESS_PROHIBITED
      Tags:
        - Key: Name
          Value: s3-bucket-public-access-prohibited
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC03-BP03

  # Advanced Pattern Rules
  Ec2SecurityGroupAttachedToEniRule:
    Type: AWS::Config::ConfigRule
    Condition: IsAdvancedPattern
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: ec2-security-group-attached-to-eni
      Description: 'セキュリティグループがENIにアタッチされていることを確認'
      Source:
        Owner: AWS
        SourceIdentifier: EC2_SECURITY_GROUP_ATTACHED_TO_ENI
      Tags:
        - Key: Name
          Value: ec2-security-group-attached-to-eni
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC05-BP01

  RdsInstancePublicAccessCheckRule:
    Type: AWS::Config::ConfigRule
    Condition: IsAdvancedPattern
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: rds-instance-public-access-check
      Description: 'RDSインスタンスがパブリックアクセス可能でないことを確認'
      Source:
        Owner: AWS
        SourceIdentifier: RDS_INSTANCE_PUBLIC_ACCESS_CHECK
      Tags:
        - Key: Name
          Value: rds-instance-public-access-check
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC05-BP02

  IamPasswordPolicyRule:
    Type: AWS::Config::ConfigRule
    Condition: IsAdvancedPattern
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: iam-password-policy
      Description: 'IAMパスワードポリシーが要件を満たしていることを確認'
      Source:
        Owner: AWS
        SourceIdentifier: IAM_PASSWORD_POLICY
      InputParameters: |
        {
          "RequireUppercaseCharacters": "true",
          "RequireLowercaseCharacters": "true",
          "RequireSymbols": "true",
          "RequireNumbers": "true",
          "MinimumPasswordLength": "14",
          "PasswordReusePrevention": "24",
          "MaxPasswordAge": "90"
        }
      Tags:
        - Key: Name
          Value: iam-password-policy
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC02-BP01

  # Enterprise Pattern Rules
  CloudtrailEnabledRule:
    Type: AWS::Config::ConfigRule
    Condition: IsEnterprisePattern
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: cloudtrail-enabled
      Description: 'CloudTrailが有効になっていることを確認'
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENABLED
      Tags:
        - Key: Name
          Value: cloudtrail-enabled
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC04-BP01

  GuarddutyEnabledCentralizedRule:
    Type: AWS::Config::ConfigRule
    Condition: IsEnterprisePattern
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: guardduty-enabled-centralized
      Description: 'GuardDutyが有効になっていることを確認'
      Source:
        Owner: AWS
        SourceIdentifier: GUARDDUTY_ENABLED_CENTRALIZED
      Tags:
        - Key: Name
          Value: guardduty-enabled-centralized
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC04-BP03

  SecurityhubEnabledRule:
    Type: AWS::Config::ConfigRule
    Condition: IsEnterprisePattern
    DependsOn: ConfigRecorder
    Properties:
      ConfigRuleName: securityhub-enabled
      Description: 'Security Hubが有効になっていることを確認'
      Source:
        Owner: AWS
        SourceIdentifier: SECURITYHUB_ENABLED
      Tags:
        - Key: Name
          Value: securityhub-enabled
        - Key: Environment
          Value: !Ref Environment
        - Key: WellArchitected
          Value: SEC04-BP02

  # Remediation Actions (Enterprise only)
  S3BucketPublicAccessRemediationConfiguration:
    Type: AWS::Config::RemediationConfiguration
    Condition: IsRemediationEnabled
    Properties:
      ConfigRuleName: !Ref S3BucketPublicAccessProhibitedRule
      TargetType: SSM_DOCUMENT
      TargetId: AWSConfigRemediation-RemoveS3BucketPublicAccess
      TargetVersion: '1'
      Parameters:
        AutomationAssumeRole:
          StaticValue: !GetAtt RemediationRole.Arn
        S3BucketName:
          ResourceValue: RESOURCE_ID
      Automatic: true
      MaximumAutomaticAttempts: 3

  # Remediation Role
  RemediationRole:
    Type: AWS::IAM::Role
    Condition: IsRemediationEnabled
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-config-remediation-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ssm.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMAutomationRole
      Policies:
        - PolicyName: S3RemediationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutBucketPublicAccessBlock
                  - s3:GetBucketPublicAccessBlock
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-config-remediation-role'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # CloudWatch Alarms
  ConfigComplianceAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: HasNotificationEmail
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-config-compliance-alarm'
      AlarmDescription: 'Config rule compliance status alarm'
      MetricName: ComplianceByConfigRule
      Namespace: AWS/Config
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - !Ref ConfigNotificationTopic
      Dimensions:
        - Name: RuleName
          Value: !Ref RootAccessKeyCheckRule
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-config-compliance-alarm'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

Outputs:
  ConfigRecorderName:
    Description: 'Config Recorder Name'
    Value: !Ref ConfigRecorder
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-recorder-name'

  ConfigDeliveryChannelName:
    Description: 'Config Delivery Channel Name'
    Value: !Ref ConfigDeliveryChannel
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-delivery-channel-name'

  ConfigBucketName:
    Description: 'Config S3 Bucket Name'
    Value: !Ref ConfigBucket
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-bucket-name'

  ConfigBucketArn:
    Description: 'Config S3 Bucket ARN'
    Value: !GetAtt ConfigBucket.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-bucket-arn'

  ConfigRoleArn:
    Description: 'Config Service Role ARN'
    Value: !GetAtt ConfigRole.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-role-arn'

  ConfigLogGroupName:
    Description: 'Config CloudWatch Log Group Name'
    Value: !Ref ConfigLogGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-log-group-name'

  ConfigNotificationTopicArn:
    Condition: HasNotificationEmail
    Description: 'Config Notification Topic ARN'
    Value: !Ref ConfigNotificationTopic
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-notification-topic-arn'

  RemediationRoleArn:
    Condition: IsRemediationEnabled
    Description: 'Config Remediation Role ARN'
    Value: !GetAtt RemediationRole.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-remediation-role-arn'

  ConfigPattern:
    Description: '使用されたConfigパターン'
    Value: !Ref ConfigPattern
    Export:
      Name: !Sub '${ProjectName}-${Environment}-config-pattern'